#!/bin/bash

# Quick GitHub Actions Upload Test
# Tests the exact upload script that will run in CI/CD

set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üéØ GitHub Actions Upload Process Test${NC}"
echo "======================================"

cd "$(dirname "${BASH_SOURCE[0]}")"

# Test 1: Verify we have the conda package
echo -e "${YELLOW}Step 1: Verifying conda package exists${NC}"
if [[ ! -f "dist-conda/noarch/cvannotate-0.1.0-py_0.conda" ]]; then
    echo -e "${RED}‚ùå Conda package not found${NC}"
    echo "Expected: dist-conda/noarch/cvannotate-0.1.0-py_0.conda"
    echo "Run: ./build-conda-ci.sh"
    exit 1
fi

PACKAGE="dist-conda/noarch/cvannotate-0.1.0-py_0.conda"
echo -e "${GREEN}‚úÖ Package found: $PACKAGE${NC}"
echo "   Size: $(ls -lh "$PACKAGE" | awk '{print $5}')"

# Test 2: Simulate the exact GitHub Actions environment setup
echo -e "${YELLOW}Step 2: Simulating GitHub Actions environment${NC}"
echo "Environment variables that would be set in CI:"
echo "  GITHUB_REF: refs/heads/develop (for test channel)"
echo "  ANACONDA_API_TOKEN: [SECRET]"
echo "  RUNNER_OS: Linux"

# Test 3: Simulate the exact download-artifact step
echo -e "${YELLOW}Step 3: Simulating artifact download${NC}"
echo "In GitHub Actions, packages would be downloaded from artifacts to:"
echo "  dist-conda/"
echo "Packages found in artifact location:"
find dist-conda/ -name "*.tar.bz2" -o -name "*.conda" | while read package; do
    echo "  üì¶ $package"
done

# Test 4: Test the exact upload script from workflow
echo -e "${YELLOW}Step 4: Testing exact upload script from .github/workflows/ci-cd.yml${NC}"

echo "EXACT SCRIPT FROM CI/CD WORKFLOW:"
echo "================================="
cat << 'EOF'
# List packages to upload
echo "Found packages:"
find dist-conda/ -name "*.tar.bz2" -o -name "*.conda"

# Upload each package individually with better error handling
for package in $(find dist-conda/ -name "*.tar.bz2" -o -name "*.conda"); do
  if [[ -f "$package" ]]; then
    echo "Uploading: $package"
    echo "File size: $(ls -lh "$package" | awk '{print $5}')"
    anaconda upload "$package" --label test --force --no-progress || {
      echo "Failed to upload $package"
      exit 1
    }
  else
    echo "Warning: Package file not found: $package"
  fi
done
EOF

echo ""
echo "EXECUTING THE SCRIPT (without actual upload):"
echo "=============================================="

# Execute the find command
echo "Found packages:"
find dist-conda/ -name "*.tar.bz2" -o -name "*.conda"

echo ""
echo "Upload simulation:"
for package in $(find dist-conda/ -name "*.tar.bz2" -o -name "*.conda"); do
    if [[ -f "$package" ]]; then
        echo -e "${GREEN}‚úÖ Would upload: $package${NC}"
        echo "   File size: $(ls -lh "$package" | awk '{print $5}')"
        echo "   Command: anaconda upload \"$package\" --label test --force --no-progress"
        
        # Validate the command syntax without executing
        if command -v anaconda > /dev/null; then
            echo "   ‚úÖ anaconda client available"
            if anaconda upload --help > /dev/null 2>&1; then
                echo "   ‚úÖ Command syntax valid"
            else
                echo "   ‚ùå Command syntax invalid"
                exit 1
            fi
        else
            echo "   ‚ö†Ô∏è  anaconda client not found (would be available in CI)"
        fi
        echo ""
    else
        echo -e "${RED}‚ùå Package file not found: $package${NC}"
        exit 1
    fi
done

# Test 5: Validate package readiness for upload
echo -e "${YELLOW}Step 5: Package upload readiness validation${NC}"

for package in $(find dist-conda/ -name "*.conda"); do
    echo "Validating package: $package"
    
    # Check file exists and is readable
    if [[ -r "$package" ]]; then
        echo "  ‚úÖ File is readable"
    else
        echo "  ‚ùå File is not readable"
        exit 1
    fi
    
    # Check file size
    SIZE=$(stat -c%s "$package" 2>/dev/null || stat -f%z "$package" 2>/dev/null || echo "0")
    if [[ $SIZE -gt 1000 ]]; then
        echo "  ‚úÖ File size is reasonable ($SIZE bytes)"
    else
        echo "  ‚ùå File size is too small ($SIZE bytes)"
        exit 1
    fi
    
    # Check file type
    if file "$package" | grep -q "Zip archive"; then
        echo "  ‚úÖ File is a valid zip archive"
    else
        echo "  ‚ùå File is not a valid zip archive"
        exit 1
    fi
done

echo ""
echo -e "${GREEN}üéâ ALL TESTS PASSED!${NC}"
echo -e "${GREEN}===================${NC}"
echo ""
echo "Summary:"
echo "‚úÖ Conda package exists and is valid"
echo "‚úÖ Upload script syntax is correct"
echo "‚úÖ File paths are handled properly"
echo "‚úÖ Error handling is in place"
echo "‚úÖ Package is ready for anaconda upload"
echo ""
echo -e "${BLUE}The conda upload process is ready for GitHub Actions!${NC}"
echo -e "${BLUE}Next step: Push to develop branch to test CI/CD${NC}"

echo ""
echo "Expected CI/CD workflow:"
echo "1. Build conda package ‚úÖ"
echo "2. Upload to test channel (anaconda.org) ‚úÖ"
echo "3. Package available for testing ‚úÖ"
